

import React, {Component} from 'react';
import PropTypes from 'prop-types';
//import { browserHistory } from 'react-router';

export default function SvgRuler(_optional) {
    return (WrappedComponent) => {
        class $SvgRuler extends Component {
            constructor(props) {
                super(props);
                this.state = {}
            }
            componentDidMount() {

			}
            componentWillReceiveProps(newProps) {}
            shouldComponentUpdate(nextProps, nextState) {
                return true
            }
            componentWillUpdate() {}
            componentDidUpdate() {}
            componentWillUnmount() {}
			mouseOver(e){
				if(this.props.hoverColor){
					e.currentTarget.childNodes[0].childNodes[0].style.fill = this.props.hoverColor
					//document.getElementById("path2987").attr('fill', this.props.hoverColor) 
				}
			}
			
			mouseOut(e){
				if(this.props.color){
					e.currentTarget.childNodes[0].childNodes[0].style.fill = this.props.color
				}
			}

            render() {
                return  <svg id="svg2" viewBox="0 0 500 500" version="1.1" onMouseOver={(e)=>this.mouseOver(e)} onMouseOut={(e)=>this.mouseOut(e)}>
					 <g id="layer1">
					  <path id="path2987" strokeLinejoin="miter" d="M 455.76746,440.32882 427.24898,359.68011 H 432.26458 C 438.94558,359.68011 444.362,354.26369 444.362,347.58268 444.362,340.90168 438.94558,335.48526 432.26458,335.48526 H 418.69368 L 368.69018,194.07763 C 378.41248,183.09155 383.87487,168.9053 383.87487,154.02466 383.87487,134.93089 374.75422,116.98557 359.68002,105.64625 V 79.828723 C 359.68002,59.81716 343.3993,43.536443 323.38774,43.536443 303.37617,43.536443 287.09546,59.81716 287.09546,79.828723 V 105.64786 C 272.02045,116.98879 262.9006,134.93331 262.9006,154.02627 262.9006,168.9295 268.37751,183.13026 278.11997,194.11876 L 228.10276,335.48687 H 214.5109 C 207.82989,335.48687 202.41347,340.90329 202.41347,347.5843 202.41347,354.2653 207.82989,359.68172 214.5109,359.68172 H 219.54181 L 191.00801,440.32801 C 188.77967,446.62674 192.07904,453.53921 198.37777,455.76755 199.71171,456.23935 201.07307,456.46356 202.41266,456.46356 207.39438,456.46356 212.06076,453.36258 213.81731,448.3978 L 245.20691,359.68172 H 311.2895 V 371.77915 C 311.2895,378.46016 316.70592,383.87658 323.38693,383.87658 330.06794,383.87658 335.48436,378.46016 335.48436,371.77915 V 359.68172 H 401.5847 L 432.95494,448.39538 C 434.71068,453.36097 439.37706,456.46275 444.36039,456.46275 445.69837,456.46275 447.06054,456.23935 448.39287,455.76755 454.69401,453.53921 457.995,446.62754 455.76746,440.32882 z M 305.25289,122.58264 C 310.73544,119.40989 317.00594,117.73319 323.38854,117.73319 324.44747,117.73319 325.50156,117.79609 326.55162,117.88803 327.87427,118.00336 329.18886,118.17353 330.4857,118.43081 330.6341,118.46065 330.78007,118.50258 330.92847,118.53404 334.64641,119.32118 338.23047,120.67609 341.52662,122.58345 352.7248,129.06041 359.68082,141.10864 359.68082,154.02547 359.68082,164.68653 355.0217,174.7653 346.89707,181.67777 340.34914,187.24903 332.0011,190.31775 323.38854,190.31775 314.78647,190.31775 306.44973,187.25871 299.90905,181.69954 291.76668,174.78868 287.09626,164.70185 287.09626,154.02547 287.09707,141.10864 294.05309,129.06041 305.25289,122.58264 z M 335.48597,335.48526 V 323.38783 C 335.48597,316.70682 330.06955,311.2904 323.38854,311.2904 316.70754,311.2904 311.29112,316.70682 311.29112,323.38783 V 335.48526 H 253.76866 L 298.4743,209.12844 C 306.2473,212.64073 314.73646,214.5118 323.38935,214.5118 332.05595,214.5118 340.55963,212.63347 348.34473,209.10908 L 393.03262,335.48526 H 335.48597 z M 335.48598,154.02546 C 335.48598,160.70668 330.06977,166.12289 323.38855,166.12289 316.70733,166.12289 311.29112,160.70668 311.29112,154.02546 311.29112,147.34424 316.70733,141.92803 323.38855,141.92803 330.06977,141.92803 335.48598,147.34424 335.48598,154.02546 z M 104.02348,93.53914 H 164.50981 V 55.63387 C 164.50981,48.952864 159.09339,43.536443 152.41238,43.536443 H 55.634583 C 48.953577,43.536443 43.537156,48.952864 43.537156,55.63387 V 444.36129 C 43.537156,451.0423 48.953577,456.45872 55.634583,456.45872 H 152.41319 C 159.0942,456.45872 164.51062,451.0423 164.51062,444.36129 V 408.06901 H 104.02348 C 97.342478,408.06901 91.926057,402.65259 91.926057,395.97158 91.926057,389.29058 97.342478,383.87416 104.02348,383.87416 H 164.50981 V 359.6793 H 128.21753 C 121.53653,359.6793 116.1201,354.26288 116.1201,347.58188 116.1201,340.90087 121.53653,335.48445 128.21753,335.48445 H 164.50981 V 311.2896 H 104.02348 C 97.342478,311.2896 91.926057,305.87318 91.926057,299.19217 91.926057,292.51116 97.342478,287.09474 104.02348,287.09474 H 164.50981 V 262.89989 H 128.21753 C 121.53653,262.89989 116.1201,257.48347 116.1201,250.80246 116.1201,244.12146 121.53653,238.70504 128.21753,238.70504 H 164.50981 V 214.51018 H 104.02348 C 97.342478,214.51018 91.926057,209.09376 91.926057,202.41276 91.926057,195.73175 97.342478,190.31533 104.02348,190.31533 H 164.50981 V 166.12048 H 128.21753 C 121.53653,166.12048 116.1201,160.70405 116.1201,154.02305 116.1201,147.34204 121.53653,141.92562 128.21753,141.92562 H 164.50981 V 117.73077 H 104.02348 C 97.342478,117.73077 91.926057,112.31435 91.926057,105.63334 91.926057,98.952336 97.342478,93.53914 104.02348,93.53914 z" stroke="none" strokeLinecap="butt" strokeWidth="1px" fill={this.props.color ||Â "#000"}/>
					 </g>
				</svg>
            }
        }
        $SvgRuler.propTypes = {
            //styles: PropTypes.object.isRequired,
            // text : PropTypes.object.isRequired,
        };
        return $SvgRuler
    }
}
    

