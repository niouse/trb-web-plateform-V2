

import React, {Component} from 'react';
import PropTypes from 'prop-types';
//import { browserHistory } from 'react-router';

export default function SvgSecurite(_optional) {
    return (WrappedComponent) => {
        class $SvgSecurite extends Component {
            constructor(props) {
                super(props);
                this.state = {}
            }
            componentDidMount() {

			}
            componentWillReceiveProps(newProps) {}
            shouldComponentUpdate(nextProps, nextState) {
                return true
            }
            componentWillUpdate() {}
            componentDidUpdate() {}
            componentWillUnmount() {}
			mouseOver(e){
				if(this.props.hoverColor){
					e.currentTarget.childNodes[0].childNodes[0].style.fill = this.props.hoverColor
					//document.getElementById("path2987").attr('fill', this.props.hoverColor) 
				}
			}
			
			mouseOut(e){
				if(this.props.color){
					e.currentTarget.childNodes[0].childNodes[0].style.fill = this.props.color
				}
			}

            render() {
                return  <svg id="svg2" viewBox="0 0 500 500" version="1.1" onMouseOver={(e)=>this.mouseOver(e)} onMouseOut={(e)=>this.mouseOut(e)}>
					 <g id="layer1">
					  <path id="path2987" strokeLinejoin="miter" d="M 81.69066,113.03432 C 80.44325,113.15188 79.38562,114.31892 79.39102,115.57184 L 79.39102,216.39886 C 79.39167,216.7968 79.48762,217.19426 79.66857,217.54868 L 163.68447,385.58051 C 164.11192,386.42156 165.04077,386.98207 165.98411,386.96822 L 250.00001,386.96822 334.01592,386.96822 C 334.95926,386.98207 335.88811,386.42156 336.31555,385.58051 L 420.33146,217.54868 C 420.51241,217.19426 420.60836,216.7968 420.609,216.39886 L 420.609,115.57184 C 420.60888,114.24323 419.40009,113.03444 418.07148,113.03432 L 409.66592,113.03432 300.43335,113.03432 C 299.10474,113.03444 297.89595,114.24323 297.89582,115.57184 L 297.89582,174.37109 C 297.89582,207.34723 285.74363,223.0994 273.78932,231.06894 261.83501,239.03847 250.00001,239.078 250.00001,239.078 250.00001,239.078 237.70073,239.04225 225.53668,231.06894 213.37262,223.09562 201.24357,207.39342 202.10421,174.45038 202.10463,174.42395 202.10463,174.39751 202.10421,174.37109 L 202.10421,115.57184 C 202.10408,114.24323 200.89529,113.03444 199.56668,113.03432 L 90.33411,113.03432 90.09621,113.03432 81.92855,113.03432 C 81.84932,113.0306 81.76989,113.0306 81.69066,113.03432 z M 84.46608,118.10937 87.79658,118.10937 87.79658,157.55997 C 87.79152,157.65239 87.79152,157.7451 87.79658,157.83752 L 87.79658,216.39886 C 87.79723,216.7968 87.89317,217.19426 88.07412,217.54868 L 163.68447,368.7694 C 163.80497,369.01797 163.96639,369.24664 164.16026,369.44343 L 172.56582,377.84898 C 173.04739,378.31514 173.71962,378.57819 174.38966,378.56266 L 191.00253,378.56266 309.03715,378.56266 325.61037,378.56266 C 326.28041,378.57819 326.95264,378.31514 327.43421,377.84898 L 335.83977,369.44343 C 336.03364,369.24664 336.19506,369.01797 336.31555,368.7694 L 411.92591,217.54868 C 412.10686,217.19426 412.2028,216.7968 412.20345,216.39886 L 412.20345,157.75822 C 412.20602,157.69217 412.20602,157.62603 412.20345,157.55997 L 412.20345,118.10937 415.53395,118.10937 415.53395,215.72483 332.46962,381.89316 250.00001,381.89316 167.53041,381.89316 84.46608,215.72483 z M 92.87163,118.10937 197.02915,118.10937 197.02915,174.33144 197.02915,174.37109 C 196.14607,208.59877 209.28404,226.4773 222.76126,235.31136 236.244,244.14906 250.00001,244.15307 250.00001,244.15307 250.00001,244.15307 263.35079,244.14711 276.60439,235.31136 289.85799,226.47563 302.97087,208.616 302.97087,174.37109 L 302.97087,118.10937 407.1284,118.10937 407.1284,155.02245 359.23259,155.02245 C 357.90398,155.02257 356.69519,156.23136 356.69506,157.55997 L 356.69506,215.80413 307.25295,314.68837 250.00001,314.68837 192.74708,314.68837 143.30497,215.80413 143.30497,157.55997 C 143.30484,156.23136 142.09605,155.02257 140.76744,155.02245 L 92.87163,155.02245 z M 193.7383,319.76342 250.00001,319.76342 306.26173,319.76342 306.26173,373.48761 193.7383,373.48761 z" stroke="none" strokeLinecap="butt" strokeWidth="1px" fill={this.props.color ||Â "#000"}/>
					 </g>
				</svg>
            }
        }
        $SvgSecurite.propTypes = {
            //styles: PropTypes.object.isRequired,
            // text : PropTypes.object.isRequired,
        };
        return $SvgSecurite
    }
}
    

